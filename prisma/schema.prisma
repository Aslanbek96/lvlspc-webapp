generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  telegramId BigInt      @unique
  senetLogin String?     @unique
  password   String?
  zenLogin   String?
  firstName  String?
  lastName   String?
  phone      String?
  image      String?
  idNumber   String?
  startDate  DateTime?
  location   String?
  payRate    String?
  birthDate  DateTime?
  role       Roles?
  status     Status?     @default(PENDING)
  shifts     UserShift[]
}

model Shift {
  id        String      @id @default(uuid())
  startTime DateTime
  endTime   DateTime?
  location  String
  type      ShiftType
  users     UserShift[]
}

model UserShift {
  userId  String
  shiftId String
  Users   User   @relation(fields: [userId], references: [id])
  Shifts  Shift  @relation(fields: [shiftId], references: [id])

  @@id([userId, shiftId])
}

model Supplier {
  id            String      @id @default(uuid())
  name          String
  contactPerson String
  phone         String
  discount      String
  Commodities   Commodity[]
  Orders        Order[]
}

model Commodity {
  id          String   @id @default(uuid())
  name        String
  description String
  supplierId  String
  supplier    Supplier @relation(fields: [supplierId], references: [id])
}

model Order {
  id           String      @id @default(uuid())
  isDelivered  Boolean
  orderDate    DateTime?
  invoice      String?
  receipt      String?
  paymentDate  DateTime?
  deliveryDate DateTime?
  status       OrderStatus @default(INITIALIZED)
  amount       Float
  location     String
  supplierId   String
  supplier     Supplier    @relation(fields: [supplierId], references: [id])
}

enum Roles {
  ADMIN
  DIRECTOR
  FINANCE
  IT
  CASHIER
  OPERATOR
  CLEANER
  CUSTOMER
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
  DECLINED
}

enum ShiftType {
  DAY
  NIGHT
}

enum OrderStatus {
  INITIALIZED //Order is created but waiting for invoice
  PENDING //Expecting payment
  PAID //Payment is done
  DELIVERED //Order is delivered and uploaded
  CANCELLED //Order is cancelled
}
